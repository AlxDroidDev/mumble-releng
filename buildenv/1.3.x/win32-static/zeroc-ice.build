#!/usr/bin/env mumble-build
# Copyright 2013-2014 The 'mumble-releng' Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that
# can be found in the LICENSE file in the source tree or at
# <http://mumble.info/mumble-releng/LICENSE>.

urls=(
	"http://releng-distfiles.mumble.info/releng-distfiles/Ice-3.5.1.zip"
	"http://www.zeroc.com/download/Ice/3.5/Ice-3.5.1.zip"
)

digests=(
	"sha1:9127c9c16d5b44d24a78d0d8afb908aace2b0287"
)

function extract {
	unzip -o Ice-3.5.1.zip
	cd Ice-3.5.1
}

function prepare {
	cd cpp
	patch -p2 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.0-win32-static.diff
	patch -p2 --binary < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.0-msvc-custom-prefix.patch
	patch -p2 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.1-iceutil-c++11-for-MSVS2012-and-greater.diff
	patch -p2 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.1-msvc2013.patch
	patch -p2 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.1-fix-win8sdk-deprecation-warning-in-IceGrid.patch
	patch -p2 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.1-fix-win8sdk-deprecation-warning-in-Ice-binding-test.patch
	patch -p2 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.1-no-install-pds.patch
	cd ..
}

function build {
	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		LIBBZ2_LIB="libbz2.lib"
		LIBDB_LIB="libdb53.lib"
		MCPP_LIB="mcpp.lib"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		LIBBZ2_LIB="libbz2d.lib"
		LIBDB_LIB="libdb53d.lib"
		MCPP_LIB="mcppd.lib"
	fi

	export ICE_ARFLAGS="/ignore:4221"
	export ICE_LDFLAGS="user32.lib gdi32.lib dbghelp.lib wsock32.lib ws2_32.lib iphlpapi.lib ${MCPP_LIB} ${LIBBZ2_LIB} libexpat.lib libeay32.lib ${LIBDB_LIB} /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/mcpp) /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/bzip2/lib) /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/OpenSSL/lib) /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/expat/lib) /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/berkeleydb/lib)"
	export ICE_CPPFLAGS="/DXML_STATIC /I$(cygpath -w ${MUMBLE_PREFIX}/bzip2/include) /I$(cygpath -w ${MUMBLE_PREFIX}/OpenSSL/include) /I$(cygpath -w ${MUMBLE_PREFIX}/expat/include) /I$(cygpath -w ${MUMBLE_PREFIX}/berkeleydb/include)"

	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=yes"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=no"
	fi

	# Build with RELEASEPDBS=yes to have cl.exe generate .pdbs
	cd cpp
	cmd /c nmake /f Makefile.mak PREFIX="$(cygpath -w ${MUMBLE_PREFIX}/ZeroC-Ice)" STATICLIBS=yes ${OPTIMIZE_FLAG} RELEASEPDBS=yes HAS_MFC=no ARFLAGS="${ICE_ARFLAGS}" LDFLAGS="${ICE_LDFLAGS}" CPPFLAGS="${ICE_CPPFLAGS}"
	cd ..
}

function install {
	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=yes"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=no"
	fi

	# Perform install with NO_INSTALL_PDBS=yes to avoid having the
	# Makefiles attempt to copy non-existant DLL PDBs.
	# TODO: Fix up zeroc-ice-3.5.0-win32-static.diff to not
	# attempt to install .pdbs for static libraries.
	cd cpp
	cmd /c nmake /f Makefile.mak PREFIX="$(cygpath -w ${MUMBLE_PREFIX}/ZeroC-Ice)" NO_INSTALL_PDBS=yes STATICLIBS=yes ${OPTIMIZE_FLAG} RELEASEPDBS=yes HAS_MFC=no ARFLAGS="${ICE_ARFLAGS}" LDFLAGS="${ICE_LDFLAGS}" CPPFLAGS="${ICE_CPPFLAGS}" install
	cd ..
}
