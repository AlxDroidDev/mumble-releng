--- ./qtbase/src/opengl/gl2paintengineex/qpaintengineex_opengl2.cpp
+++ ./qtbase/src/opengl/gl2paintengineex/qpaintengineex_opengl2.cpp
@@ -1200,7 +1200,7 @@ void QGL2PaintEngineEx::stroke(const QVe
     if (qpen_style(pen) == Qt::NoPen || qbrush_style(penBrush) == Qt::NoBrush)
         return;
 
-    QOpenGL2PaintEngineState *s = state();
+    QOpenGL2PaintEngineExState *s = state();
     if (qt_pen_is_cosmetic(pen, s->renderHints) && !qt_scaleForTransform(s->transform(), 0)) {
         // QTriangulatingStroker class is not meant to support cosmetically sheared strokes.
         QPaintEngineEx::stroke(path, pen);
@@ -1214,7 +1214,7 @@ void QGL2PaintEngineEx::stroke(const QVe
 
 void QGL2PaintEngineExPrivate::stroke(const QVectorPath &path, const QPen &pen)
 {
-    const QOpenGL2PaintEngineState *s = q->state();
+    const QOpenGL2PaintEngineExState *s = q->state();
     if (snapToPixelGrid) {
         snapToPixelGrid = false;
         matrixDirty = true;
@@ -1491,7 +1491,7 @@ void QGL2PaintEngineEx::drawTextItem(con
     Q_D(QGL2PaintEngineEx);
 
     ensureActive();
-    QOpenGL2PaintEngineState *s = state();
+    QOpenGL2PaintEngineExState *s = state();
 
     const QTextItemInt &ti = static_cast<const QTextItemInt &>(textItem);
 
@@ -1573,7 +1573,7 @@ void QGL2PaintEngineExPrivate::drawCache
 {
     Q_Q(QGL2PaintEngineEx);
 
-    QOpenGL2PaintEngineState *s = q->state();
+    QOpenGL2PaintEngineExState *s = q->state();
 
     void *cacheKey = const_cast<QGLContext *>(QGLContextPrivate::contextGroup(ctx)->context());
     bool recreateVertexArrays = false;
@@ -2353,8 +2353,8 @@ void QGL2PaintEngineEx::setState(QPainte
 
     Q_D(QGL2PaintEngineEx);
 
-    QOpenGL2PaintEngineState *s = static_cast<QOpenGL2PaintEngineState *>(new_state);
-    QOpenGL2PaintEngineState *old_state = state();
+    QOpenGL2PaintEngineExState *s = static_cast<QOpenGL2PaintEngineExState *>(new_state);
+    QOpenGL2PaintEngineExState *old_state = state();
 
     QPaintEngineEx::setState(s);
 
@@ -2395,11 +2395,11 @@ QPainterState *QGL2PaintEngineEx::create
     if (orig)
         const_cast<QGL2PaintEngineEx *>(this)->ensureActive();
 
-    QOpenGL2PaintEngineState *s;
+    QOpenGL2PaintEngineExState *s;
     if (!orig)
-        s = new QOpenGL2PaintEngineState();
+        s = new QOpenGL2PaintEngineExState();
     else
-        s = new QOpenGL2PaintEngineState(*static_cast<QOpenGL2PaintEngineState *>(orig));
+        s = new QOpenGL2PaintEngineExState(*static_cast<QOpenGL2PaintEngineExState *>(orig));
 
     s->matrixChanged = false;
     s->compositionModeChanged = false;
@@ -2410,7 +2410,7 @@ QPainterState *QGL2PaintEngineEx::create
     return s;
 }
 
-QOpenGL2PaintEngineState::QOpenGL2PaintEngineState(QOpenGL2PaintEngineState &other)
+QOpenGL2PaintEngineExState::QOpenGL2PaintEngineExState(QOpenGL2PaintEngineExState &other)
     : QPainterState(other)
 {
     isNew = true;
@@ -2421,7 +2421,7 @@ QOpenGL2PaintEngineState::QOpenGL2PaintE
     rectangleClip = other.rectangleClip;
 }
 
-QOpenGL2PaintEngineState::QOpenGL2PaintEngineState()
+QOpenGL2PaintEngineExState::QOpenGL2PaintEngineExState()
 {
     isNew = true;
     needsClipBufferClear = true;
@@ -2429,7 +2429,7 @@ QOpenGL2PaintEngineState::QOpenGL2PaintE
     canRestoreClip = true;
 }
 
-QOpenGL2PaintEngineState::~QOpenGL2PaintEngineState()
+QOpenGL2PaintEngineExState::~QOpenGL2PaintEngineExState()
 {
 }
 
--- ./qtbase/src/opengl/gl2paintengineex/qpaintengineex_opengl2_p.h
+++ ./qtbase/src/opengl/gl2paintengineex/qpaintengineex_opengl2_p.h
@@ -81,12 +81,12 @@ QT_BEGIN_NAMESPACE
 class QGL2PaintEngineExPrivate;
 
 
-class QOpenGL2PaintEngineState : public QPainterState
+class QOpenGL2PaintEngineExState : public QPainterState
 {
 public:
-    QOpenGL2PaintEngineState(QOpenGL2PaintEngineState &other);
-    QOpenGL2PaintEngineState();
-    ~QOpenGL2PaintEngineState();
+    QOpenGL2PaintEngineExState(QOpenGL2PaintEngineExState &other);
+    QOpenGL2PaintEngineExState();
+    ~QOpenGL2PaintEngineExState();
 
     uint isNew : 1;
     uint needsClipBufferClear : 1;
@@ -140,11 +140,11 @@ public:
 
     virtual void setState(QPainterState *s);
     virtual QPainterState *createState(QPainterState *orig) const;
-    inline QOpenGL2PaintEngineState *state() {
-        return static_cast<QOpenGL2PaintEngineState *>(QPaintEngineEx::state());
+    inline QOpenGL2PaintEngineExState *state() {
+        return static_cast<QOpenGL2PaintEngineExState *>(QPaintEngineEx::state());
     }
-    inline const QOpenGL2PaintEngineState *state() const {
-        return static_cast<const QOpenGL2PaintEngineState *>(QPaintEngineEx::state());
+    inline const QOpenGL2PaintEngineExState *state() const {
+        return static_cast<const QOpenGL2PaintEngineExState *>(QPaintEngineEx::state());
     }
 
     void beginNativePainting();
